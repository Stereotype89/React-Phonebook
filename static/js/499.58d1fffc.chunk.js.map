{"version":3,"file":"static/js/499.58d1fffc.chunk.js","mappings":"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","sources":["constants/iconsSize.js","redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const iconsSize = Object.freeze({\n  small: 16,\n  medium: 32,\n  large: 64,\n});\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.getIsLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm__form\":\"ContactForm_contactForm__form__-c9TG\",\"contactForm__field\":\"ContactForm_contactForm__field__+cOPR\",\"contactForm__field_label\":\"ContactForm_contactForm__field_label__YSzht\",\"contactForm__input\":\"ContactForm_contactForm__input__k3i+4\",\"contactForm__submit_button\":\"ContactForm_contactForm__submit_button__eOEdn\",\"contactForm__submit-button\":\"ContactForm_contactForm__submit-button__daHG0\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const newContactAudit = newContact => {\n    return contacts.filter(\n      contact => contact.name?.toLowerCase() === newContact.name?.toLowerCase()\n    );\n  };\n\n  const contactFormSubmitHandler = newContact => {\n    if (newContactAudit(newContact).length > 0) {\n      alert(`${newContact.name} is already in contacts.`);\n      return false;\n    } else {\n      dispatch(addContact(newContact));\n      return true;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    if (contactFormSubmitHandler({ name, number })) {\n      form.reset();\n    }\n  };\n\n  return (\n    <form className={css.contactForm__form} onSubmit={handleSubmit}>\n      <label\n        htmlFor=\"name\"\n        className={`${css.contactForm__field} ${css.contactForm__field_label}`}\n      >\n        Name:\n        <input\n          className={css.contactForm__input}\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Contact name\"\n          required\n        />\n      </label>\n      <label\n        htmlFor=\"number\"\n        className={`${css.contactForm__field} ${css.contactForm__field_label}`}\n      >\n        Number:\n        <input\n          className={css.contactForm__input}\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Contact number\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.contactForm__submit_button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__field\":\"Filter_filter__field__fujd7\",\"filter__field_label\":\"Filter_filter__field_label__tro3m\",\"filter__field_input\":\"Filter_filter__field_input__xwagY\"};","import { useDispatch } from 'react-redux';\n\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const contactFilter = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n\n  return (\n    <>\n      <label\n        htmlFor=\"filter-field\"\n        className={`${css.filter__field} ${css.filter__field_label}`}\n      >\n        Find contacts by name:\n        <input\n          id=\"filter-field\"\n          className={css.filter__field_input}\n          type=\"text\"\n          placeholder=\"Enter search query\"\n          onChange={contactFilter}\n        />\n      </label>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsListItem__item\":\"ContactListItem_contactsListItem__item__E94IE\",\"contactsListItem__item_circle\":\"ContactListItem_contactsListItem__item_circle__Tsc6G\",\"contactsListItem__item_name\":\"ContactListItem_contactsListItem__item_name__otVc+\",\"contactsListItem__item_number\":\"ContactListItem_contactsListItem__item_number__mAbZo\",\"contactsListItem__button\":\"ContactListItem_contactsListItem__button__HFX2D\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nimport css from './ContactListItem.module.css';\n\nconst ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.contactsListItem__item}>\n      <span className={css.contactsListItem__item_circle}></span>\n      <p className={css.contactsListItem__item_name}>\n        {name}:\n        <span className={css.contactsListItem__item_number}>{number}</span>\n      </p>\n      <button\n        type=\"button\"\n        className={css.contactsListItem__button}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList__list\":\"ContactList_contactList__list__EgfLC\"};","import { useSelector } from 'react-redux';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/contactsSelectors';\n\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport css from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const visibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={css.contactList__list}>\n      {visibleContacts?.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  gap: 200px;\n  align-items: start;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  padding: 20px;\n  border-radius: 4px;\n  transform: translate(-50%, -50%) scale(1);\n`;\n\nexport const ConatctFormConatiner = styled.div``;\n\nexport const ContactsListContainer = styled.div``;\n\nexport const NotAuthContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  padding: 20px;\n  border-radius: 4px;\n  transform: translate(-50%, -50%) scale(1);\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FcLikePlaceholder } from 'react-icons/fc';\n\nimport { fetchContacts } from '../../redux/contacts/contactsOperations';\nimport {\n  selectError,\n  selectIsLoading,\n} from '../../redux/contacts/contactsSelectors';\nimport { selectIsAuthorized } from '../../redux/auth/authSelectors';\n\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport {\n  Container,\n  ConatctFormConatiner,\n  NotAuthContainer,\n} from './Contacts.styled';\nimport { iconsSize } from '../../constants/iconsSize';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isAuthorized = useSelector(selectIsAuthorized);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isAuthorized ? (\n        <Container>\n          <ConatctFormConatiner>\n            <h2>Phonebok</h2>\n            <ContactForm />\n          </ConatctFormConatiner>\n          <div>\n            <h2>Contacts</h2>\n            <Filter />\n            {isLoading && !error && <h3>Request in progress...</h3>}\n            <ContactList />\n            {error && <h3>{error}</h3>}\n          </div>\n        </Container>\n      ) : (\n        <NotAuthContainer>\n          <h1>Please log in to access the phonebook</h1>\n          <FcLikePlaceholder size={iconsSize.large} />\n        </NotAuthContainer>\n      )}\n    </>\n  );\n}\n"],"names":["iconsSize","Object","freeze","small","medium","large","selectContacts","state","contacts","items","selectIsLoading","getIsLoading","selectError","error","selectFilter","filter","ContactForm","dispatch","useDispatch","useSelector","contactFormSubmitHandler","newContact","contact","name","toLowerCase","newContactAudit","length","alert","addContact","className","css","onSubmit","event","preventDefault","form","currentTarget","elements","value","number","reset","htmlFor","id","type","pattern","title","placeholder","required","Filter","onChange","filterContacts","target","onClick","deleteContact","ContactList","visibleContacts","includes","map","ContactListItem","Container","styled","ConatctFormConatiner","NotAuthContainer","App","isAuthorized","selectIsAuthorized","isLoading","useEffect","fetchContacts","size"],"sourceRoot":""}